{"remainingRequest":"/home/bulat/DV_Business/djackets_vue/node_modules/babel-loader/lib/index.js!/home/bulat/DV_Business/djackets_vue/src/main.js","dependencies":[{"path":"/home/bulat/DV_Business/djackets_vue/src/main.js","mtime":1673904372054},{"path":"/home/bulat/DV_Business/djackets_vue/node_modules/cache-loader/dist/cjs.js","mtime":1673974982696},{"path":"/home/bulat/DV_Business/djackets_vue/node_modules/babel-loader/lib/index.js","mtime":1673974985624}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICIvaG9tZS9idWxhdC9EVl9CdXNpbmVzcy9kamFja2V0c192dWUvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvci5qcyI7CmltcG9ydCAiL2hvbWUvYnVsYXQvRFZfQnVzaW5lc3MvZGphY2tldHNfdnVlL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5qcyI7CmltcG9ydCAiL2hvbWUvYnVsYXQvRFZfQnVzaW5lc3MvZGphY2tldHNfdnVlL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyI7CmltcG9ydCAiL2hvbWUvYnVsYXQvRFZfQnVzaW5lc3MvZGphY2tldHNfdnVlL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5maW5hbGx5LmpzIjsKaW1wb3J0IHsgY3JlYXRlQXBwIH0gZnJvbSAndnVlJzsKaW1wb3J0IEFwcCBmcm9tICcuL0FwcC52dWUnOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMCc7Ci8qCtCd0LXQvtC00L3QvtC60YDQsNGC0L3QviDQv9GA0Lgg0YHQvtC30LTQsNC90LjQuCDQstC10LEt0L/RgNC40LvQvtC20LXQvdC40Y8g0LLQsNC8INC80L7QttC10YIg0L/QvtC90LDQtNC+0LHQuNGC0YzRgdGPINC/0L7Qu9GD0YfQsNGC0Ywg0Lgg0L7RgtC+0LHRgNCw0LbQsNGC0Ywg0LTQsNC90L3Ri9C1INC40LcgQVBJLgrQodGD0YnQtdGB0YLQstGD0LXRgiDQvdC10YHQutC+0LvRjNC60L4g0YHQv9C+0YHQvtCx0L7QsiDRgdC00LXQu9Cw0YLRjCDRjdGC0L4sINC90L4g0L3QsNC40LHQvtC70LXQtSDQv9C+0L/Rg9C70Y/RgNC90YvQvCDRgNC10YjQtdC90LjQtdC8INGP0LLQu9GP0LXRgtGB0Y8g0LjRgdC/0L7Qu9GM0LfQvtCy0LDQvdC40LUgYXhpb3MsCtC+0YHQvdC+0LLQsNC90L3QvtCz0L4g0L3QsCBQcm9taXNlIEhUVFAt0LrQu9C40LXQvdGC0LAuCiAqLwoKY3JlYXRlQXBwKEFwcCkudXNlKHN0b3JlKS51c2Uocm91dGVyLCBheGlvcykubW91bnQoJyNhcHAnKTs="},{"version":3,"sources":["/home/bulat/DV_Business/djackets_vue/src/main.js"],"names":["createApp","App","router","store","axios","defaults","baseURL","use","mount"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;AAEA;AACA;AACA;AACA;AACA;;AACAN,SAAS,CAACC,GAAD,CAAT,CAAeM,GAAf,CAAmBJ,KAAnB,EAA0BI,GAA1B,CAA8BL,MAA9B,EAAsCE,KAAtC,EAA6CI,KAA7C,CAAmD,MAAnD","sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000'\n\n/*\nНеоднократно при создании веб-приложения вам может понадобиться получать и отображать данные из API.\nСуществует несколько способов сделать это, но наиболее популярным решением является использование axios,\nоснованного на Promise HTTP-клиента.\n */\ncreateApp(App).use(store).use(router, axios).mount('#app')\n"]}]}